
@page "/statuses";
@using WebAssemblyF.Models;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@using Microsoft.Extensions.Http;
@using Microsoft.Net.Http.Headers;
@using System.Net.Http.Headers;
@using Newtonsoft.Json;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components;
@using WebAssemblyF.Pages.Authentication;
@using System.Net.Http;

@attribute [Authorize]

@inject HttpClient Http
@inject IAccessTokenProvider TokenProvider

<h3>List of statuses </h3>

@if (AllStatuses == null)
{
	<p><em> Loading...</em></p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>StatusId</th>
				<th>Status</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var status in AllStatuses)
			{
			<tr>
				<td>@status.StatusId</td>
				<td>@status.Status</td>
			</tr>
			}
		</tbody>
	</table>
}
@code {

	private List<StatusModel> AllStatuses;

	protected override async Task OnInitializedAsync()
	{
		await CallApi();
	}

	async Task CallApi()
	{

		var accessTokenResult = await TokenProvider.RequestAccessToken();
		var AccessToken = string.Empty;

		if (accessTokenResult.TryGetToken(out var token))
		{
			AccessToken = token.Value;
		}
		Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", AccessToken);
		//HttpResponseMessage responce = await Http.GetAsync("api/Status");

		//string content = await responce.Content.ReadAsStringAsync();
		//AllStatuses = JsonConvert.DeserializeObject<List<StatusModel>>();

		AllStatuses = await Http.GetFromJsonAsync<List<StatusModel>>("api/Status");
	}
}